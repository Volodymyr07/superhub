{"openapi":"3.1.0","info":{"title":"DocuPanda","version":"0.1.0"},"paths":{"/":{"get":{"summary":"Root","operationId":"root","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/health":{"post":{"summary":"Health Check","description":"Health check endpoint to confirm the service is operational.","operationId":"health_check","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}},"/document":{"post":{"tags":["Document"],"summary":"Submit a Document for Processing","description":"Use this endpoint to submit documents to DocuPanda for processing. You can upload a local file or provide a URL to a remote file. Upon submission, receive a unique `documentId` which you may use to retrieve the document's results, or apply subsequent workflows on it. Max document size is 500 pages\n\n*Advanced*: you may also provide a `workflowId` to apply a pre-defined workflow to the document.","operationId":"post_document","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostDocumentRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostDocumentResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/document/{document_id}":{"get":{"summary":"Retrieve a Processed Document","operationId":"get_document","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Document"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Access the analysis results of your submitted document using this endpoint. The `status` field indicates the document's current processing stage, and the `result` field provides the extracted plain text for AI comprehension, as well as more granular structured information such as bounding boxes for detected tables and text blocks.","tags":["Document"]},"delete":{"summary":"Delete a Document","description":"Delete a document that has been previously submitted to DocuPanda for processing.","operationId":"delete_document","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Document"]}},"/document/{document_id}/download/original-url":{"get":{"summary":"Download Original URL","description":"Generate and retrieve a presigned URL for accessing the original file of a document by its ID. The URL is valid for a limited time (e.g., 1 hour) and allows secure access to the document stored on DocuPanda.","operationId":"download_original_url","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}},{"name":"hours","in":"query","required":false,"schema":{"type":"integer","description":"Number of hours the URL should be valid for","default":6,"title":"Hours"},"description":"Number of hours the URL should be valid for"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PresignedUrlResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Internal Server Error"}},"tags":["Document"]}},"/document/{document_id}/download/ocr-url":{"get":{"summary":"Download OCR URL","description":"Generate an OCR PDF by providing a document ID. This will add the OCR text into a layer on top of the PDF, allowing you to search the PDF by the OCR text. Returns a presigned URL to download the OCR PDF. This URL is valid for a limited time (e.g., 1 hour) and allows secure access to the OCR PDF stored on DocuPanda. Note that this endpoint only works for documents with PDF file types.","operationId":"download_ocr_url","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"document_id","in":"path","required":true,"schema":{"type":"string","title":"Document Id"}},{"name":"hours","in":"query","required":false,"schema":{"type":"integer","description":"Number of hours the URL should be valid for","default":6,"title":"Hours"},"description":"Number of hours the URL should be valid for"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PresignedUrlResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Internal Server Error"}},"tags":["Document"]}},"/documents":{"get":{"summary":"List Documents","operationId":"list_documents","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"dataset","in":"query","required":false,"schema":{"type":"string","description":"The dataset to filter documents by","title":"Dataset"},"description":"The dataset to filter documents by"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The maximum number of documents to return. Maximum is 1000","default":20,"title":"Limit"},"description":"The maximum number of documents to return. Maximum is 1000"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The number of documents to skip (to paginate through the dataset)","default":0,"title":"Offset"},"description":"The number of documents to skip (to paginate through the dataset)"},{"name":"exclude_payload","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to exclude the result payload from the response","default":true,"title":"Exclude Payload"},"description":"Whether to exclude the result payload from the response"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Document"},"title":"Response List Documents Documents Get"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"List all documents that have been submitted to DocuPanda for processing. You can filter the results by providing a dataset name.","tags":["Document"]},"delete":{"summary":"Delete Multiple Documents","description":"Delete multiple documents that have been previously submitted to DocuPanda for processing. You can provide a list of document IDs to delete multiple documents at once.","operationId":"delete_documents","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteDocumentsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Document"]}},"/dataset-names":{"get":{"tags":["Document"],"summary":"List Dataset Names","description":"List all dataset names for the documents you have submitted so far","operationId":"list_datasets","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetDatasetsResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/schema/refine":{"post":{"tags":["Schema"],"summary":"Refine a Schema","description":"Refine a schema by providing feedback in free text to edit the structured output.","operationId":"post_refine_schema","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefineSchemaRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Schema"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/schema/autogenerate":{"post":{"tags":["Schema"],"summary":"AutoGenerate a Schema","description":"Generate a schema based on a list of documents. Leave the instructions empty if you want the AI to use its best judgment, or provide instructions to indicate your preference to how the schema should be generated. Best results are achieved when you provide a varied list of documents that represent the full range of type of documents you expect to process, and when you provide clear instructions to what you expect the schema to capture and how you want it to be structured.","operationId":"post_schema_autogenerate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AutoGenerateSchemaRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AutoGenerateSchemaResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/schema/autogenerate/{job_id}":{"get":{"summary":"Retrieve AutoGenerate Schema Job","operationId":"get_schema_autogenerate_job","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AutoGenerateSchemaJobResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve the status of an autogenerate schema job.","tags":["Schema"]}},"/schema/{schema_id}":{"delete":{"summary":"Delete a Schema","description":"Delete a schema by its id.","operationId":"delete_schema","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"schema_id","in":"path","required":true,"schema":{"type":"string","title":"Schema Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Schema"]},"get":{"summary":"Retrieve a Schema","operationId":"get_schema","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"schema_id","in":"path","required":true,"schema":{"type":"string","title":"Schema Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Schema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve aan existing schema by providing the schema's ID.","tags":["Schema"]}},"/schema/id/{schema_id}":{"get":{"summary":"Retrieve a Schema","operationId":"get_schema_by_id","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"schema_id","in":"path","required":true,"schema":{"type":"string","title":"Schema Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Schema"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve aan existing schema by providing the schema's ID.","tags":["Schema"]}},"/schemas":{"get":{"summary":"List Schemas","operationId":"list_schemas","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The maximum number of schemas to return. Maximum is 1000","default":20,"title":"Limit"},"description":"The maximum number of schemas to return. Maximum is 1000"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The number of schemas to skip (to paginate through the data)","default":0,"title":"Offset"},"description":"The number of schemas to skip (to paginate through the data)"},{"name":"exclude_payload","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to exclude the jsonSchema payload","default":true,"title":"Exclude Payload"},"description":"Whether to exclude the jsonSchema payload"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Schema"},"title":"Response List Schemas Schemas Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"List all of your schemas. The output here includes the jsonSchema data as well.","tags":["Schema"]}},"/standardization/{standardization_id}":{"get":{"summary":"Retrieve a Standardization","operationId":"get_standardization","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"standardization_id","in":"path","required":true,"schema":{"type":"string","title":"Standardization Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Standardization"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve the standardization results of a document by providing the document's ID.","tags":["Standardization"]},"delete":{"summary":"Delete a Standardization","description":"Delete a standardization by providing the standardization ID.","operationId":"delete_standardization","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"standardization_id","in":"path","required":true,"schema":{"type":"string","title":"Standardization Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Standardization"]}},"/standardizations":{"delete":{"summary":"Delete Multiple Standardizations","description":"Delete multiple standardizations at once by providing a list of standardization IDs.","operationId":"delete_standardizations","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteStandardizationsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Standardization"]},"get":{"summary":"List Standardizations","description":"Retrieve all standardizations of documents that have been processed using a specific schema.","operationId":"list_standardizations","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"schema_id","in":"query","required":false,"schema":{"type":"string","description":"The schema ID to filter standardizations by","title":"Schema Id"},"description":"The schema ID to filter standardizations by"},{"name":"document_id","in":"query","required":false,"schema":{"type":"string","description":"The ID of the document to filter standardizations by","title":"Document Id"},"description":"The ID of the document to filter standardizations by"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The maximum number of standardizations to return. Maximum is 1000","default":20,"title":"Limit"},"description":"The maximum number of standardizations to return. Maximum is 1000"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The number of standardizations to skip (to paginate through the data)","default":0,"title":"Offset"},"description":"The number of standardizations to skip (to paginate through the data)"},{"name":"exclude_payload","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to exclude the data payload in the response","default":true,"title":"Exclude Payload"},"description":"Whether to exclude the data payload in the response"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Standardization"},"title":"Response List Standardizations Standardizations Get"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Standardization"]}},"/jobs":{"delete":{"summary":"Delete Jobs","description":"Delete multiple jobs that have been submitted to DocuPanda for processing. You can provide a list of job IDs to delete multiple jobs at once. Since jobs are just a record of events, deleting them will just hide them from you - the actual records will still be stored in the database. For specific jobs that contain actual data, such as Analyze-Document, the data will be deleted.","operationId":"delete_jobs","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteJobsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Job"]},"get":{"summary":"List Jobs","operationId":"list_jobs","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"start_date","in":"query","required":false,"schema":{"type":"string","title":"Start Date"}},{"name":"end_date","in":"query","required":false,"schema":{"type":"string","title":"End Date"}},{"name":"status","in":"query","required":false,"schema":{"type":"string","title":"Status"}},{"name":"job_type","in":"query","required":false,"schema":{"type":"string","title":"Job Type"}},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":20,"title":"Limit"}},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","default":0,"title":"Offset"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Job"},"title":"Response List Jobs Jobs Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"List all jobs that have been submitted to DocuPanda for processing. Every document upload, standardization, or credit-consuming event results in a job. This lets you audit your credit consumption. You can optionally filter the results by providing a date range in the format yyyy-mm-dd.","tags":["Job"]}},"/standardize/batch":{"post":{"tags":["Standardization"],"summary":"Standardize Documents","description":"Standardize a batch of one or more documents all at once, either by passing a list of Document IDs or by passing a dataset name.Use the forceRecompute flag to optionally reprocess documents that have already been standardized.\n\n*Advanced*: You can specify a standardization mode to control how the AI sees the document. The options are:\n1. `default` - Automatically determine the best mode based on the document content.\n2. `sectionBased` - Represent the document as a list of sections (paragraphs, tables, images, etc.), the same ones you see in the document `result` field.\n3. `spatial` - Represent text in the document according to its spatial layout.","operationId":"post_standardize_batch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StandardizeBatchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StandardizeBatchResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/review/batch":{"post":{"tags":["Review"],"summary":"Generate a Visual Review","description":"This endpoint is used to generate a visual review of the standardization results. For every value in the standardization payload, we generate a confidence score and a a list of locations, where a location is page number and x1,y1,x2,y2 bounding box coordinate on that page, designating the top left and lower right corner of the bounding box. This indicates where in the doucment the value was found.","operationId":"post_review_batch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StandardizationReviewRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BatchReviewResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/review":{"get":{"summary":"Retrieve a Review","operationId":"get_standardization_review","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"review_id","in":"query","required":false,"schema":{"type":"string","title":"Review Id"}},{"name":"standardization_id","in":"query","required":false,"schema":{"type":"string","title":"Standardization Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Review"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"This endpoint is used to retrieve a review object by either by its unique identifier or by its associated standardization ID.","tags":["Review"]}},"/reviews":{"get":{"summary":"List Reviews","operationId":"list_reviews","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"include_data","in":"query","required":false,"schema":{"type":"boolean","description":"Whether to include the data payload in the response","default":false,"title":"Include Data"},"description":"Whether to include the data payload in the response"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The maximum number of reviews to return. Maximum is 1000","default":20,"title":"Limit"},"description":"The maximum number of reviews to return. Maximum is 1000"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The number of reviews to skip (to paginate through the data)","default":0,"title":"Offset"},"description":"The number of reviews to skip (to paginate through the data)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Review"},"title":"Response List Reviews Reviews Get"}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"This endpoint is used to list all review objects.","tags":["Review"]},"delete":{"summary":"Delete Reviews","operationId":"delete_reviews","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteReviewsRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"This endpoint is used to delete multiple review object. You can pass a length 1 list of review IDs to delete a single review.","tags":["Review"]}},"/schema/update":{"post":{"tags":["Schema"],"summary":"Update a Schema","description":"Update an existing schema by posting a valid JSON schema. This does not overwrite, but creates a new schema.","operationId":"post_update_schema","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSchemaRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateSchemaResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/class":{"post":{"tags":["Classification"],"summary":"Add a Class","description":"Add a new class to the taxonomy of classes, including name and description.","operationId":"post_add_class","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassAddRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassObject"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/class/{class_id}":{"delete":{"summary":"Delete a Class","description":"Delete a class from the taxonomy of classes by providing the class ID.","operationId":"delete_class","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"class_id","in":"path","required":true,"schema":{"type":"string","title":"Class Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Classification"]}},"/classes":{"get":{"summary":"List Classes","description":"List all classes that have been defined in the taxonomy.","operationId":"list_classes","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"include_unknown","in":"query","required":false,"schema":{"type":"boolean","default":false,"title":"Include Unknown"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ClassObject"},"title":"Response List Classes Classes Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Classification"]}},"/class/expand":{"post":{"tags":["Classification"],"summary":"Expand Class Taxonomy","description":"Expand a your list of classes (a.k.a taxonomy), by providing a list of document IDs to let the AI decide how to name any documents that don't map into the existing list of classes. New classes will populate after a few minutes.","operationId":"post_expand_taxonomy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExpandTaxonomyRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExpandTaxonomyResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/classify/batch":{"post":{"tags":["Classification"],"summary":"Classify Documents","description":"Classify a batch of one or multiple documents all at once by passing a list of document IDs, and an optional list of class IDs to use for classification. If no class IDs are provided, all classes will be used. To use the `unknown` class, either pass its classId ('unknown') or set the includeUnknown flag as True.","operationId":"post_classify_batch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassifyBatchRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassifyBatchResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/classify/{job_id}":{"get":{"summary":"Retrieve Classification Job","operationId":"get_classify_job","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClassifyResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve the status of a classification job, including the outcome of the assigned classes.","tags":["Classification"]}},"/analyze/document":{"post":{"tags":["Analysis"],"summary":"Analyze Document","description":"Analyze a single document by passing a `documentId` and a list of questions in natural language. If the `pages` parameter is provided, the AI will only analyze the specified pages. Poll for the results using the `GET /job/{jobId}` endpoint with the returned jobId.","operationId":"post_analyze_document","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyzeDocumentRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostAnalyzeResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/analyze/data":{"post":{"tags":["Analysis"],"summary":"Analyze Data","description":"Analyze multiple documents all at once, either by passing a list of Document IDs or by passing a dataset name. If both are pased, we will use the intersection of the two. Analysis works by passing a list of questions in natural language. If a schemaId is passed, the AI will first use the standardizations of those documents under the provided schema to narrow down which documents are relevant. Only then, it will analyze the documents and provide answers to the questions, along with confidence scores and citations.\nIf a schemaId is not passed, the AI will manually examine all documents, with a limit of 50.\n When schemaId is passed, the AI can optionally also perform database queries for statistical calculations and         answer the questions based on those results.","operationId":"post_analyze_data","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyzeDataRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostAnalyzeResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/analysis/{analysis_id}":{"get":{"summary":"Retrieve Analysis","operationId":"get_analysis","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"analysis_id","in":"path","required":true,"schema":{"type":"string","title":"Analysis Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Analysis"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve an analysis object by providing the analysis ID, which has the questions and answers.","tags":["Analysis"]}},"/analyses":{"get":{"summary":"List Analyses","operationId":"list_analyses","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","description":"The maximum number of analyses to return. maximum is 20","default":1000,"title":"Limit"},"description":"The maximum number of analyses to return. maximum is 20"},{"name":"offset","in":"query","required":false,"schema":{"type":"integer","description":"The number of analyses to skip (to paginate through the data)","default":0,"title":"Offset"},"description":"The number of analyses to skip (to paginate through the data)"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Analysis"},"title":"Response List Analyses Analyses Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"List all analyses that have been performed.","tags":["Analysis"]},"delete":{"summary":"Delete Multiple Analyses","description":"Delete multiple analyses at once by providing a list of analysis IDs.","operationId":"delete_analyses","security":[{"APIKeyHeader":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteAnalysesRequest"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Analysis"]}},"/split":{"post":{"tags":["Document"],"summary":"Split a Document","description":"Split a document into multiple documents intelligently using AI. If no splitting is needed, no new documents will be created. Otherwise, the new sub-documents will be automatically generated.","operationId":"post_split","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SplitJobRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PostSplitResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/split/{job_id}":{"get":{"summary":"Retrieve Split Job","operationId":"get_split_job","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetSplitJobResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"description":"Retrieve the status of a document splitting job.","tags":["Document"]}},"/job/{job_id}":{"get":{"summary":"Retrieve a Job","operationId":"get_job","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"job_id","in":"path","required":true,"schema":{"type":"string","title":"Job Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"anyOf":[{"$ref":"#/components/schemas/JobDocumentUpload"},{"$ref":"#/components/schemas/JobStandardize"},{"$ref":"#/components/schemas/JobStandardizeBatch"},{"$ref":"#/components/schemas/JobAnalyzeDocument"},{"$ref":"#/components/schemas/JobAnalyzeData"},{"$ref":"#/components/schemas/JobTranslate"},{"$ref":"#/components/schemas/JobSplit"},{"$ref":"#/components/schemas/JobClassify"},{"$ref":"#/components/schemas/JobClassifyBatch"},{"$ref":"#/components/schemas/JobCreateSchema"},{"$ref":"#/components/schemas/JobUpdateSchema"},{"$ref":"#/components/schemas/JobAutogenerateSchema"},{"$ref":"#/components/schemas/JobImproveSchema"},{"$ref":"#/components/schemas/JobQuery"},{"$ref":"#/components/schemas/JobExpandTaxonomy"},{"$ref":"#/components/schemas/JobReview"}],"title":"Response Get Job Job  Job Id  Get"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Internal Server Error"}},"description":"Retrieve the details of a specific job by providing the job's ID. This will include the job's status, timestamp, and any other relevant information.","tags":["Job"]}},"/jobs/summary":{"get":{"tags":["Job"],"summary":"Get Job Summary","description":"Get a summary of your jobs broken down by Job Type. For each job type, you will see the number of jobs and number of credits consumed. The output includes 3 versions of the summary:\n1. All time summary with deleted jobs\n2. All time summary excluding deleted jobs\n2. Summary since start_date (defaults to previous billing date, includes deleted jobs)\nYou may pass start_date as an optional query parameter in ISO format (yyyy-mm-dd).","operationId":"get_job_summary","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JobSummary"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/documents/summary":{"get":{"tags":["Document"],"summary":"Get Document Summary","description":"Get a summary of your documents, including the total number of documents, as well as the list of unique datasets","operationId":"get_document_summary","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DocumentSummary"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/standardizations/summary":{"get":{"tags":["Standardization"],"summary":"Get Standardization Summary","description":"Get a summary of your standardizations, including the total number as well as the list of unique schema names","operationId":"get_standardization_summary","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StandardizationSummary"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/account":{"get":{"tags":["Account"],"summary":"Get Account Information","description":"Get information about your account, including the number of remaining credits, the number of overage credits, and the details of the upcoming invoice.","operationId":"get_account","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetAccountResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/workflow/on-submit-document":{"post":{"tags":["Workflow"],"summary":"Create a Workflow","description":"Use this endpoint to create a workflow that triggers when a document is submitted.\n\nThe workflow can be configured to either:\n1. Always run the specified schema(s) on the document, set via the `standardizeStep` input.\n2. Conditionally run one or more schemas based on the document's `classId`, set via the `classifyStandardizeStep` input.\n\nNote: You must provide one of these inputs, but not both.\n\nTo run the workflow, use the `POST /document` endpoint with the `workflowId` that gets returned from this endpoint. ","operationId":"post_workflow_on_submit_document","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowOnSubmitDocumentRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WorkflowPostResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"402":{"description":"Payment Required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InsufficientCreditsError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/workflows":{"get":{"tags":["Workflow"],"summary":"List your Workflows","description":"This endpoint returns a list of all your workflows.","operationId":"list_workflows","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Workflow"},"type":"array","title":"Response List Workflows Workflows Get"}}}}},"security":[{"APIKeyHeader":[]}]}},"/workflow/{workflow_id}":{"delete":{"summary":"Delete a Workflow","description":"Delete a workflow by providing the workflow ID.","operationId":"delete_workflow","security":[{"APIKeyHeader":[]}],"parameters":[{"name":"workflow_id","in":"path","required":true,"schema":{"type":"string","title":"Workflow Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeletionResponse"}}}},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}},"description":"Not Found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"tags":["Workflow"]}},"/webhook/get-portal-link":{"get":{"tags":["Webhook"],"summary":"Get Webhook Portal URL","description":"Generates a magic link for you to log on to URL to the app portal. From the portal you can configure webhook subscriptions in a user-friendly interface.","operationId":"get_portal_link","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WebhookPortalResponse"}}}}},"security":[{"APIKeyHeader":[]}]}},"/webhook/generate-endpoint":{"post":{"tags":["Webhook"],"summary":"Register an Endpoint","description":"Generate a webhook endpoint for your application. The specified url will receive ALL events. If you want to define a more granular specification, use our dashboard portal under account/settings in docupanda website.","operationId":"generate_endpoint","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWebhookEndpointRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWebhookEndpointResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/webhook/delete-endpoint":{"post":{"tags":["Webhook"],"summary":"Deregister an Endpoint","description":"Deregister a webhook endpoint for your application, it will stop receiving all events. You can also manage this in our dashboard portal under account/settings in docupanda website.","operationId":"delete_endpoint","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteWebhookEndpointRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteWebhookEndpointResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"APIKeyHeader":[]}]}},"/readme-webhook":{"post":{"summary":"Webhook Readme","description":"readme.io webhook to let them know what's a user's secret key","operationId":"webhook_readme","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Analysis":{"properties":{"analysisId":{"type":"string","title":"Analysis ID","description":"Unique identifier of the analysis object."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job that created the analysis."},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs that were analyzed."},"dataset":{"type":"string","title":"Dataset","description":"Dataset which defines what documents are included in the analysis."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema used to fetch standardizations for querying."},"numDocs":{"type":"integer","title":"Number of Documents","description":"Number of documents analyzed."},"pages":{"items":{"type":"integer"},"type":"array","title":"Pages","description":"List of page numbers to analyze. If none, all pages are analyzed. Only applies for single document."},"data":{"items":{"$ref":"#/components/schemas/QuestionAnswer"},"type":"array","title":"Data (Questions and Answers)","description":"List of questions and answers for the analysis, along with confidence and citations."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the analysis job."}},"type":"object","required":["analysisId","jobId","data"],"title":"Analysis","description":"Public facing version of DocuPandaAnalysis\n    "},"AnalyzeDataRequest":{"properties":{"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to analyze. If both dataset and documentIds are provided, we take the intersection of the two."},"dataset":{"type":"string","title":"Dataset","description":"Dataset which defines what documents are included in the analysis. If both dataset and documentIds are provided, we take the intersection of the two."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema to be used for the analysis. If provided, only those documents with a valid standardization under this schema will be included in the analysis."},"questions":{"items":{"type":"string"},"type":"array","title":"Questions","description":"List of questions to be answered."},"maxCredits":{"type":"integer","title":"Max Credits","description":"Maximum number of credits to spend on this job. If not provided, no maximum is enforced."}},"type":"object","required":["questions"],"title":"AnalyzeDataRequest","description":"Asyncronous request for the Analyze Data endpoint\n    "},"AnalyzeDocumentRequest":{"properties":{"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document to be questioned."},"questions":{"items":{"type":"string"},"type":"array","title":"Questions","description":"List of questions to be answered."},"pages":{"items":{"type":"integer"},"type":"array","title":"Pages","description":"List of page numbers to be analyzed (zero indexed). If not provided, all pages will be analyzed."}},"type":"object","required":["documentId","questions"],"title":"AnalyzeDocumentRequest"},"AnalyzedPage":{"properties":{"sections":{"items":{"$ref":"#/components/schemas/Section"},"type":"array","title":"Sections","description":"A list of parsed sections in the page.","default":[]},"text":{"type":"string","title":"Text","description":"The text content of the page - a concatenation of the text in all sections."},"pageNum":{"type":"integer","title":"Page Number","description":"The number of this page in document (zero indexed).","default":0}},"type":"object","title":"AnalyzedPage","description":"Public facing version of DocuPandaAnalyzedPage\n    "},"AutoGenerateSchemaJobResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the autogenerate schema job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Job Status","description":"Current status of the job."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier for the generated schema. Only available when the job is completed."},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"List of standardization IDs for the documents used to generate the schema. These will only become available after schema generation is complete, and only if standardizeUsingSchema is set to true."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."}},"type":"object","required":["jobId","status"],"title":"AutoGenerateSchemaJobResponse"},"AutoGenerateSchemaRequest":{"properties":{"schemaName":{"type":"string","title":"Schema Name","description":"Name of the schema to be defined. For example rental contracts"},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to use for schema generation."},"dataset":{"type":"string","title":"Dataset","description":"The dataset to which the documents belong."},"instructions":{"type":"string","title":"Create Instructions","description":"Instructions on how to create the schema.","examples":["Create a schema that includes the rental amount as a number, and currency as a separate currency code string."]},"guidelines":{"type":"string","title":"Apply Guidelines","description":"Guidelines to apply to the schema to documents when standardizing.","examples":["The doctor signature is always on the last page, at the bottom right corner."]},"standardizeUsingSchema":{"type":"boolean","title":"Standardize Using Schema","description":"Whether to standardize the input documents using the newly created schema after generation.Note that standardizing documents costs credits just as if you had called the `/standardize` endpoint directly","default":true},"standardizationMode":{"allOf":[{"$ref":"#/components/schemas/StandardizationMode"}],"title":"Standardization Mode","description":"*Advanced Feature*\nMode of standardization to run, if standardizing using the schema."}},"type":"object","required":["schemaName"],"title":"AutoGenerateSchemaRequest"},"AutoGenerateSchemaResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the autogenerate schema job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Job Status","description":"Current status of the job."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier for the schema being generated. The schema is only available when the job is completed."},"schemaName":{"type":"string","title":"Schema Name","description":"Name of the schema being generated."},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"List of standardization IDs for the documents used to generate the schema. These will only become available after schema generation is complete, and only if standardizeUsingSchema is set to true."},"standardizationJobIds":{"items":{"type":"string"},"type":"array","title":"Standardization Job IDs","description":"List of standardization job IDs for the documents used to generate the schema. These will only become available after schema generation is complete, and only if standardizeUsingSchema is set to true."}},"type":"object","required":["jobId","status"],"title":"AutoGenerateSchemaResponse"},"BatchReviewResponse":{"properties":{"jobIds":{"items":{"type":"string"},"type":"array","title":"Job IDs","description":"Unique identifiers of the jobs."},"reviewIds":{"items":{"type":"string"},"type":"array","title":"Review IDs","description":"Unique identifiers of the review objects which will be generated."},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"Unique identifiers of the standardization objects under review."}},"type":"object","required":["jobIds","reviewIds","standardizationIds"],"title":"BatchReviewResponse"},"Citation":{"properties":{"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document where the citation is found."},"pages":{"items":{"type":"integer"},"type":"array","title":"Pages","description":"List of page numbers where the citation is found (zero-indexed)."}},"type":"object","required":["documentId","pages"],"title":"Citation"},"ClassAddRequest":{"properties":{"className":{"type":"string","title":"Class Name","description":"Name of the class to be added."},"description":{"type":"string","title":"Description","description":"Description of the class to be added. This will be used by the AI to classify documents."}},"type":"object","required":["className","description"],"title":"ClassAddRequest"},"ClassObject":{"properties":{"classId":{"type":"string","title":"Class ID","description":"Unique identifier of the classification object."},"className":{"type":"string","title":"Class Name","description":"Name of the class."},"description":{"type":"string","title":"Description","description":"Description of the class."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the classification creation."}},"type":"object","required":["classId","className"],"title":"ClassObject","description":"Public facing version of DocuPandaClass\n    "},"ClassifyBatchRequest":{"properties":{"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to classify"},"classIds":{"items":{"type":"string"},"type":"array","title":"Class IDs","description":"List of class IDs to use for classification"},"multiClass":{"type":"boolean","title":"Multi-Class","description":"Whether to allow multiple classifications per document","default":false},"includeUnknown":{"type":"boolean","title":"Include Unknown","description":"Whether to include the 'unknown' class in the classification (only relevant if multiClass is false)","default":true},"instructions":{"type":"string","title":"Instructions","description":"Instructions for the AI on how to classify the documents"}},"type":"object","required":["documentIds"],"title":"ClassifyBatchRequest"},"ClassifyBatchResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"ID of the batch classification job"},"documentCount":{"type":"integer","title":"Document Count","description":"Number of documents processed"},"pageCount":{"type":"integer","title":"Page Count","description":"Number of pages processed"},"classificationJobIds":{"items":{"type":"string"},"type":"array","title":"Classification Job IDs","description":"List of individual job IDs for each document's classify job"},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Status","description":"Status of the batch classification job"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the classification job"}},"type":"object","required":["jobId","status"],"title":"ClassifyBatchResponse"},"ClassifyResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"ID of the classification job"},"documentId":{"type":"string","title":"Document ID","description":"ID of the document classified"},"classIds":{"items":{"type":"string"},"type":"array","title":"Class IDs","description":"List of class IDs used for classification"},"assignedClassIds":{"items":{"type":"string"},"type":"array","title":"Assigned Class IDs","description":"List of class IDs assigned to the document"},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Status","description":"Status of the classification job"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the classification job"}},"type":"object","required":["jobId","documentId","status"],"title":"ClassifyResponse"},"ClassifyStandardizeStep":{"properties":{"classIds":{"items":{"type":"string"},"type":"array","title":"Classids","description":"The ids of the classes to classify the data to. If omitted or empty list, use all classes.","examples":[["classId1","classId2"]]},"multiClass":{"type":"boolean","title":"Multi-Class","description":"Whether the classification is multi-class or not.","default":false},"includeUnknown":{"type":"boolean","title":"Include Unknown","description":"Whether to include the 'unknown' class in the classification. Only relevant for if multiClass is false and classIds is not provided.","default":true},"instructions":{"type":"string","title":"Instructions","description":"Instructions for the AI on how to classify the document."},"classToSchema":{"additionalProperties":{"type":"string"},"type":"object","title":"Classtoschema","description":"A mapping of class ID to a schema that we should standardize into. Note that not every class must be mapped to a schema, if you do not wish to standardize certain classes. Any schemas mentioned will trigger a standardize action based on the schemaId provided.","examples":[{"classId1":"schemaId1","classId2":"schemaId2"}]}},"type":"object","required":["classToSchema"],"title":"Classify and Standardize Step"},"ClassifyStandardizeStepOutput":{"properties":{"classificationJobId":{"type":"string","title":"Classification Job ID","description":"Job ID for the classification job."},"classToStandardizationIds":{"type":"object","title":"Class to Standardization IDs","description":"Dictionary mapping class IDs to the standardization IDs that will be created for that class if the document is classified as that class."},"classToStandardizationJobIds":{"type":"object","title":"Class to Standardization Job IDs","description":"Dictionary mapping class IDs to the job IDs for the standardization jobs that will run for that class if the document is classified as that class."}},"type":"object","required":["classificationJobId","classToStandardizationIds","classToStandardizationJobIds"],"title":"ClassifyStandardizeStepOutput"},"Confidence":{"type":"string","enum":["high","medium","low"],"title":"Confidence"},"CreateWebhookEndpointRequest":{"properties":{"url":{"type":"string","title":"Url","description":"The URL of the webhook endpoint"},"subscribedEvents":{"items":{"$ref":"#/components/schemas/EventTypeEnum"},"type":"array","title":"Subscribedevents","description":"The events to subscribe to, if not specified, all events will be sent to the endpoint"}},"type":"object","required":["url"],"title":"CreateWebhookEndpointRequest"},"CreateWebhookEndpointResponse":{"properties":{"endpointId":{"type":"string","title":"Endpointid","description":"The ID which identifies the endpoint"}},"type":"object","required":["endpointId"],"title":"CreateWebhookEndpointResponse"},"DeleteAnalysesRequest":{"properties":{"analysisIds":{"items":{"type":"string"},"type":"array","title":"Analysis IDs","description":"List of analysis IDs to be deleted."}},"type":"object","required":["analysisIds"],"title":"DeleteAnalysesRequest"},"DeleteDocumentsRequest":{"properties":{"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to be deleted."}},"type":"object","required":["documentIds"],"title":"DeleteDocumentsRequest"},"DeleteJobsRequest":{"properties":{"jobIds":{"items":{"type":"string"},"type":"array","title":"Job IDs","description":"List of job IDs to be deleted."}},"type":"object","required":["jobIds"],"title":"DeleteJobsRequest"},"DeleteReviewsRequest":{"properties":{"reviewIds":{"items":{"type":"string"},"type":"array","title":"Review IDs","description":"Unique identifiers of the review objects to be deleted."}},"type":"object","required":["reviewIds"],"title":"DeleteReviewsRequest","description":"Request for the delete review endpoint\n    "},"DeleteStandardizationsRequest":{"properties":{"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"List of standardization IDs to be deleted."}},"type":"object","required":["standardizationIds"],"title":"DeleteStandardizationsRequest"},"DeleteWebhookEndpointRequest":{"properties":{"endpointId":{"type":"string","title":"Endpointid","description":"The ID which identifies the webhook endpoint"}},"type":"object","required":["endpointId"],"title":"DeleteWebhookEndpointRequest"},"DeleteWebhookEndpointResponse":{"properties":{"success":{"type":"boolean","title":"Success","description":"The webhook endpoint was successfully deleted","default":true}},"type":"object","title":"DeleteWebhookEndpointResponse"},"DeletionResponse":{"properties":{"success":{"type":"boolean","title":"Success","description":"Whether the deletion was successful or not."}},"type":"object","required":["success"],"title":"DeletionResponse"},"Document":{"properties":{"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"dataset":{"type":"string","title":"Dataset","description":"Name of the dataset to which the document belongs."},"classified":{"type":"boolean","title":"Classified","description":"Whether the document has been classified.","default":false},"classIds":{"items":{"type":"string"},"type":"array","title":"Class IDs","description":"List of class IDs assigned to the document. If classified is False, this will be None."},"filename":{"type":"string","title":"Document filename","description":"Name of the document file."},"fileType":{"allOf":[{"$ref":"#/components/schemas/FileType"}],"title":"File Type","description":"Type of the document file."},"fileExtension":{"allOf":[{"$ref":"#/components/schemas/FileExtension"}],"title":"File Extension","description":"Extension of the document file."},"result":{"allOf":[{"$ref":"#/components/schemas/ParsingResults"}],"title":"Analysis Result","description":"Result of the document analysis if completed."},"metadata":{"type":"object","title":"Metadata","description":"Metadata associated with the document. This is a user-defined dictionary that can have any properties."},"language":{"type":"string","title":"Language","description":"The dominant language of the document."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the document processing (deprecated, will be removed in future versions)."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the document creation."}},"type":"object","required":["documentId"],"title":"Document","description":"Public facing version of DocuPandaDocument\n    "},"DocumentSummary":{"properties":{"totalDocuments":{"type":"integer","title":"Total Documents","description":"Total number of documents."},"datasets":{"items":{"type":"string"},"type":"array","title":"Datasets","description":"List of dataset names."}},"type":"object","required":["totalDocuments","datasets"],"title":"DocumentSummary"},"ErrorResponse":{"properties":{"detail":{"items":{"type":"string"},"type":"array","title":"Detail","description":"Details about the error"}},"type":"object","required":["detail"],"title":"ErrorResponse"},"EventTypeEnum":{"type":"string","enum":["document.processed.success","document.processed.error","standardization.processed.success","standardization.processed.error","review.processed.success","review.processed.error","schema.processed.success","schema.processed.error","classification.processed.success","classification.processed.error","split.processed.success","split.processed.error"],"title":"EventTypeEnum"},"ExpandTaxonomyRequest":{"properties":{"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to be processed."},"instructions":{"type":"string","title":"Instructions","description":"Instructions for the AI on how to expand the taxonomy."}},"type":"object","required":["documentIds"],"title":"ExpandTaxonomyRequest"},"ExpandTaxonomyResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Status","description":"Status of the job.","default":"processing"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job."},"documentCount":{"type":"integer","title":"Document Count","description":"Number of documents processed."}},"type":"object","required":["jobId"],"title":"ExpandTaxonomyResponse"},"File":{"properties":{"contents":{"type":"string","format":"binary","title":"File Contents","description":"Binary string representing the content of the file in base64 encoding."},"filename":{"type":"string","title":"Filename","description":"Name of the file, not including the file extension."},"fileExtension":{"allOf":[{"$ref":"#/components/schemas/FileExtension"}],"title":"File Extension","description":"Extension of the file."},"fileType":{"allOf":[{"$ref":"#/components/schemas/FileType"}],"title":"File Type","description":"Type of the file"}},"type":"object","required":["contents","filename"],"title":"File"},"FileExtension":{"type":"string","enum":["pdf","png","jpeg","webp","txt","json"],"title":"FileExtension"},"FileType":{"type":"string","enum":["pdf","image","text","json"],"title":"FileType"},"GetAccountResponse":{"properties":{"remainingCredits":{"type":"number","title":"Remainingcredits","description":"The number of remaining credits in your account under your current plan. Consuming these credits will result in no charge"},"overageCredits":{"type":"number","title":"Overagecredits","description":"The number of overage credits in your account. These credits will be charged on your billing cycle."},"upcomingInvoice":{"allOf":[{"$ref":"#/components/schemas/UpcomingInvoice"}],"title":"Upcominginvoice","description":"Details of the upcoming invoice, including the total amount and the date it will be charged"}},"type":"object","required":["remainingCredits","overageCredits"],"title":"GetAccountResponse"},"GetDatasetsResponse":{"properties":{"datasetNames":{"items":{"type":"string"},"type":"array","title":"Dataset Names","description":"List of dataset names"}},"type":"object","required":["datasetNames"],"title":"GetDatasetsResponse"},"GetSplitJobResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the split job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Status","description":"Current status of the split job."},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the original document that was split."},"numNewDocuments":{"type":"integer","title":"Number of New Documents","description":"Number of new documents created from the split."},"newDocumentIds":{"items":{"type":"string"},"type":"array","title":"New Document IDs","description":"List of unique identifiers of the new documents created from the split."},"details":{"items":{"type":"object"},"type":"array","title":"Details","description":"Details of the split document."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Time taken to process the split job in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of when the job was created."}},"type":"object","required":["jobId","status","documentId","timestamp"],"title":"GetSplitJobResponse"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"HeaderType":{"type":"string","enum":["paragraph","h1","h2","h3","h4","h5","h6"],"title":"HeaderType"},"HealthResponse":{"properties":{"success":{"type":"boolean","title":"Success","description":"Whether the request was successful or not."}},"type":"object","required":["success"],"title":"HealthResponse"},"InputDocument":{"properties":{"url":{"type":"string","maxLength":2083,"minLength":1,"format":"uri","title":"Document URL","description":"URL pointing to the location of the input file.","examples":["https://example.com/document.pdf"]},"file":{"allOf":[{"$ref":"#/components/schemas/File"}],"title":"File","description":"File object containing the input document in base64 encoding."}},"type":"object","title":"Input Document"},"InsufficientCreditsError":{"properties":{"detail":{"items":{"type":"string"},"type":"array","title":"Detail","description":"Explanation about the exhausted credits"}},"type":"object","required":["detail"],"title":"InsufficientCreditsError"},"Job":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Job Type","description":"Type of the job."},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."}},"type":"object","required":["jobId","jobType","status"],"title":"Job"},"JobAnalyzeData":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"analyze-data"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"analysisId":{"type":"string","title":"Analysis ID"},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs"},"dataset":{"type":"string","title":"Dataset"},"schemaId":{"type":"string","title":"Schema ID"},"questions":{"items":{"type":"string"},"type":"array","title":"Questions to ask about the data"}},"type":"object","required":["jobId","status","analysisId"],"title":"JobAnalyzeData"},"JobAnalyzeDocument":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"analyze-document"},"documentId":{"type":"string","title":"Document ID"},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"analysisId":{"type":"string","title":"Analysis ID"},"pages":{"items":{"type":"integer"},"type":"array","title":"Pages Questioned (if missing, all pages are analyzed)"},"questions":{"items":{"type":"string"},"type":"array","title":"Questions to ask about the document"}},"type":"object","required":["jobId","documentId","status","analysisId"],"title":"JobAnalyzeDocument"},"JobAutogenerateSchema":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"autogenerate-schema"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"schemaId":{"type":"string","title":"Schema ID"},"schemaName":{"type":"string","title":"Schema Name"},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs"},"dataset":{"type":"string","title":"Dataset"},"instructions":{"type":"string","title":"Instructions"},"guidelines":{"type":"string","title":"Guidelines"},"standardizeUsingSchema":{"type":"boolean","title":"Standardize Using Schema","default":false},"standardizationMode":{"allOf":[{"$ref":"#/components/schemas/StandardizationMode"}],"title":"Standardization Mode"},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs"},"standardizationJobIds":{"items":{"type":"string"},"type":"array","title":"Standardization Job IDs"}},"type":"object","required":["jobId","status","schemaId","schemaName"],"title":"JobAutogenerateSchema"},"JobClassify":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"classify"},"documentId":{"type":"string","title":"Document ID"},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"classIds":{"items":{"type":"string"},"type":"array","title":"Class IDs"},"includeUnknown":{"type":"boolean","title":"Include Unknown"},"multiClass":{"type":"boolean","title":"Multi Class"},"assignedClassIds":{"items":{"type":"string"},"type":"array","title":"Assigned Class IDs"}},"type":"object","required":["jobId","documentId","status","classIds"],"title":"JobClassify"},"JobClassifyBatch":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"classify-batch"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs"},"classIds":{"items":{"type":"string"},"type":"array","title":"Class IDs"},"includeUnknown":{"type":"boolean","title":"Include Unknown"},"multiClass":{"type":"boolean","title":"Multi Class"},"classifyJobIds":{"items":{"type":"string"},"type":"array","title":"Classify Job IDs"}},"type":"object","required":["jobId","status","documentIds"],"title":"JobClassifyBatch"},"JobCreateSchema":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"create-schema"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"schemaId":{"type":"string","title":"Schema ID"},"schemaName":{"type":"string","title":"Schema Name"}},"type":"object","required":["jobId","status","schemaId"],"title":"JobCreateSchema"},"JobDocumentUpload":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Job Type","description":"Type of the job."},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"filename":{"type":"string","title":"Filename"},"fileExtension":{"allOf":[{"$ref":"#/components/schemas/FileExtension"}],"title":"File Extension"},"fileType":{"allOf":[{"$ref":"#/components/schemas/FileType"}],"title":"File Type"},"processingMethod":{"allOf":[{"$ref":"#/components/schemas/ProcessingMethod"}],"title":"Processing Method"},"numPages":{"type":"integer","title":"Number of Pages"},"pages":{"items":{"$ref":"#/components/schemas/AnalyzedPage"},"type":"array","title":"Pages"},"language":{"type":"string","title":"Language"},"workflowId":{"type":"string","title":"Workflow ID"}},"type":"object","required":["jobId","jobType","status"],"title":"JobDocumentUpload"},"JobExpandTaxonomy":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"expand-taxonomy"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs"},"instructions":{"type":"string","title":"Instructions"},"newClassIds":{"items":{"type":"string"},"type":"array","title":"New Class IDs"},"newClassDetails":{"items":{"type":"object"},"type":"array","title":"New Class Details"}},"type":"object","required":["jobId","status","documentIds"],"title":"JobExpandTaxonomy"},"JobImproveSchema":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"improve-schema"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"schemaId":{"type":"string","title":"Schema ID"}},"type":"object","required":["jobId","status","schemaId"],"title":"JobImproveSchema"},"JobQuery":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"query"},"documentId":{"type":"string","title":"Document ID"},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"query":{"type":"string","title":"Query"}},"type":"object","required":["jobId","documentId","status","query"],"title":"JobQuery"},"JobReview":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"review"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"reviewId":{"type":"string","title":"Review ID"},"standardizationId":{"type":"string","title":"Standardization ID"}},"type":"object","required":["jobId","status","reviewId","standardizationId"],"title":"JobReview"},"JobSplit":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"split"},"documentId":{"type":"string","title":"Document ID"},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"numNewDocuments":{"type":"integer","title":"Number of New Documents"},"newDocumentIds":{"items":{"type":"string"},"type":"array","title":"New Document IDs"},"details":{"items":{"type":"object"},"type":"array","title":"Details"},"instructions":{"type":"string","title":"Instructions"}},"type":"object","required":["jobId","documentId","status"],"title":"JobSplit"},"JobStandardize":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"standardize"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"standardizationId":{"type":"string","title":"Standardization ID"},"schemaId":{"type":"string","title":"Schema ID"},"standardizationMode":{"allOf":[{"$ref":"#/components/schemas/StandardizationMode"}],"title":"Standardization Mode"},"guidelines":{"type":"string","title":"Guidelines"}},"type":"object","required":["jobId","status","standardizationId","schemaId"],"title":"JobStandardize"},"JobStandardizeBatch":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"standardize-batch"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"schemaId":{"type":"string","title":"Schema ID"},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs"},"documentCount":{"type":"integer","title":"Document Count"},"pageCount":{"type":"integer","title":"Page Count"},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs"},"standardizationJobIds":{"items":{"type":"string"},"type":"array","title":"Standardization Job IDs"}},"type":"object","required":["jobId","status","schemaId","documentIds","documentCount","pageCount"],"title":"JobStandardizeBatch"},"JobSummary":{"properties":{"summaryAllTime":{"additionalProperties":{"$ref":"#/components/schemas/JobTypeStats"},"type":"object","title":"Summary All Time","description":"Summary of the total number of jobs and credits used by job type (deleted jobs count as well)."},"summaryRecent":{"additionalProperties":{"$ref":"#/components/schemas/JobTypeStats"},"type":"object","title":"Summary Recent","description":"Summary of the recent (since last billing cycle) number of jobs and credits used by job type."},"totalVisibleJobs":{"type":"integer","title":"Total Visible Jobs","description":"Total number of visible jobs (not deleted)."}},"type":"object","required":["summaryAllTime","summaryRecent","totalVisibleJobs"],"title":"JobSummary"},"JobTranslate":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"translate"},"documentId":{"type":"string","title":"Document ID"},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"language":{"type":"string","title":"Language"},"pagesToTranslate":{"items":{"type":"integer"},"type":"array","title":"Pages to Translate"},"numPagesTranslated":{"type":"integer","title":"Number of Pages Translated"},"translatedText":{"type":"string","title":"Translated Text"}},"type":"object","required":["jobId","documentId","status","language"],"title":"JobTranslate"},"JobTypeStats":{"properties":{"numJobs":{"type":"integer","title":"Numjobs"},"numCredits":{"type":"number","title":"Numcredits"}},"type":"object","required":["numJobs","numCredits"],"title":"JobTypeStats"},"JobUpdateSchema":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job."},"jobType":{"type":"string","title":"Jobtype","default":"update-schema"},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"credits":{"type":"number","title":"Credits","description":"Number of credits used by the operation."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the job."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the job failed."},"processingTime":{"type":"number","title":"Processing Time","description":"Processing time in seconds."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of the job creation."},"schemaId":{"type":"string","title":"Schema ID"},"schemaName":{"type":"string","title":"Schema Name"}},"type":"object","required":["jobId","status","schemaId"],"title":"JobUpdateSchema"},"ParsingResults":{"properties":{"pages":{"items":{"$ref":"#/components/schemas/AnalyzedPage"},"type":"array","title":"Pages","description":"A list of parsed pages in the document.","default":[]},"numPages":{"type":"integer","title":"Number of Pages","description":"The number of pages in the document.","default":0},"text":{"type":"string","title":"Text","description":"The text content of the document."},"language":{"type":"string","title":"Language","description":"The dominant language of the document."}},"type":"object","title":"ParsingResults","description":"Public facing version of DocuPandaParsingResults\n    "},"PostAnalyzeResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the submitted job."},"analysisId":{"type":"string","title":"Analysis ID","description":"Unique identifier for the analysis."},"success":{"type":"boolean","title":"Success","description":"Whether the job was successful launched or not."}},"type":"object","required":["jobId","analysisId","success"],"title":"PostAnalyzeResponse","description":"Asyncronous response for analyze-document or analyze-data\n    "},"PostDocumentRequest":{"properties":{"document":{"allOf":[{"$ref":"#/components/schemas/InputDocument"}],"description":"The document to be analyzed, provided either as a file or via a URL.","examples":[{"document":{"file":{"contents":"SGVsbG8sIFdvcmxkIQ==","filename":"example.pdf"},"url":"https://example.com/document.pdf"}}]},"pages":{"items":{"type":"integer"},"type":"array","title":"Pages","description":"List of page numbers to be parsed (zero indexed). If not provided, all pages will be parsed."},"dataset":{"type":"string","title":"Dataset","description":"Name of the dataset to which you want to assign this document. It can be any string. This is useful to group your documents"},"metadata":{"type":"object","title":"Metadata","description":"Optional metadata to associate with the document."},"processingMethod":{"allOf":[{"$ref":"#/components/schemas/ProcessingMethod"}],"title":"Processing Method","description":"Method to use for processing the document. The options are: asImage (treats native PDFs as images)."},"workflowId":{"type":"string","title":"Workflow ID","description":"*Advanced Feature*\nUnique identifier of the workflow to be applied to the doucment once it is processed. See `POST /workflow/onSubmitDocument` for more details."}},"type":"object","required":["document"],"title":"PostDocumentRequest"},"PostDocumentResponse":{"properties":{"documentId":{"type":"string","title":"Document ID","description":"Unique identifier for the submitted document."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the Document Upload Job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the document processing."},"workflowResponse":{"allOf":[{"$ref":"#/components/schemas/WorkflowResponse"}],"title":"Workflow Response","description":"*Advanced Feature*\nIf you supplied a workfld In the input, the response will contain all the information to retrieve the outcome of the workflow."}},"type":"object","required":["documentId","jobId","status"],"title":"PostDocumentResponse"},"PostSplitResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier for the submitted job."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"Timestamp of when the job was submitted."},"success":{"type":"boolean","title":"Success","description":"Whether the job was successfully submitted.","default":true}},"type":"object","required":["jobId"],"title":"PostSplitResponse","description":"Async response for a split job\n    "},"PresignedUrlResponse":{"properties":{"url":{"type":"string","title":"Url"}},"type":"object","required":["url"],"title":"PresignedUrlResponse"},"ProcessingMethod":{"type":"string","enum":["asImage","removeWatermark"],"title":"ProcessingMethod"},"ProcessingStatus":{"type":"string","enum":["processing","completed","error"],"title":"ProcessingStatus"},"QuestionAnswer":{"properties":{"question":{"type":"string","title":"Question","description":"The question to be answered."},"answer":{"type":"string","title":"Answer","description":"The answer to the question."},"confidence":{"allOf":[{"$ref":"#/components/schemas/Confidence"}],"title":"Confidence","description":"The confidence level of the answer."},"citations":{"items":{"$ref":"#/components/schemas/Citation"},"type":"array","title":"Citations","description":"List of citations for the answer."}},"type":"object","required":["question"],"title":"QuestionAnswer"},"RefineSchemaRequest":{"properties":{"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema that was used with the document to make the standardization."},"feedback":{"type":"string","title":"Feedback","description":"Feedback string to alter the schema.","examples":["The schema should include the rental amount as a number, and currency as a seperate currency code string"]},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document to use for schema refinement."}},"type":"object","required":["schemaId","feedback"],"title":"RefineSchemaRequest"},"Review":{"properties":{"standardizationId":{"type":"string","title":"Standardization ID","description":"Unique identifier of the standardization object."},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"data":{"type":"object","title":"Reviewed Payload","description":"An exact copy of the original standardization JSON object, except every value is replaced with a dictionary with the following values:\n- **value**: The original value\n- **review**:\n   - **page**: (Under review) The page number on which the value was found\n   - **confidence**: (Under review) The confidence score of the value extraction\n   - **boundingBox**: (Under review) The bounding box of the value on the page. These will be normalized coordinates 0..1 for the page size, in the format:\n      - **x**: The x-coordinate (starting from the left)\n      - **y**: The y-coordinate (starting from the top)\n      - **width**: The width of the bounding box\n      - **height**: The height of the bounding box\n"},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema used for standardization."},"schemaName":{"type":"string","title":"Schema Name","description":"Name of the schema used for standardization."},"description":{"type":"string","title":"Description","description":"Description of the schema/standardization."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job that created the standardization."},"dataset":{"type":"string","title":"Dataset","description":"Name of the dataset to which the document belongs"},"filename":{"type":"string","title":"Filename","description":"Name of the file that was standardized."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the standardization job."},"metadata":{"type":"object","title":"Metadata","description":"Metadata associated with the document that originated this standardization. This just echoes any metadata you have previously posted on document creation."},"reviewId":{"type":"string","title":"Review ID","description":"Unique identifier of the review object."}},"type":"object","required":["standardizationId","documentId"],"title":"Review"},"Schema":{"properties":{"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema."},"schemaName":{"type":"string","title":"Schema Name","description":"Name of the schema."},"jsonSchema":{"type":"object","title":"JSON Schema","description":"The JSON schema that defines the structure of the data."},"guidelines":{"type":"string","title":"Guidelines","description":"Guidelines for the schema."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job that last modified the schema."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the schema creation."}},"type":"object","required":["schemaId"],"title":"Schema","description":"Public facing version of DocuPandaSchema\n    "},"Section":{"properties":{"type":{"allOf":[{"$ref":"#/components/schemas/SectionType"}],"title":"Type","description":"The type of the section (text, table, image)"},"text":{"type":"string","title":"Text","description":"The text content of the section"},"bbox":{"items":{"type":"number"},"type":"array","title":"Bounding Box","description":"Bounding box of the section in the format [x1, y1, x2, y2], in percentage units [0, 1] within the page"},"header":{"allOf":[{"$ref":"#/components/schemas/HeaderType"}],"title":"Header Type","description":"For text sections, the type of header: paragraph (default), h1 - h6"},"tableList":{"items":{"items":{"type":"string"},"type":"array"},"type":"array","title":"Table List","description":"For table sections, a list of lists representing the table. The outer list represents rows, the inner lists represent column values in those rows. The first row is the header.If there is no header, the first row is a list of empty strings."}},"type":"object","required":["type","text","bbox"],"title":"Section"},"SectionType":{"type":"string","enum":["text","table","image"],"title":"SectionType"},"SplitJobRequest":{"properties":{"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document to be split."},"instructions":{"type":"string","title":"Instructions","description":"Instructions for how the splitting should be done (optional)."}},"type":"object","required":["documentId"],"title":"SplitJobRequest"},"Standardization":{"properties":{"standardizationId":{"type":"string","title":"Standardization ID","description":"Unique identifier of the standardization object."},"documentId":{"type":"string","title":"Document ID","description":"Unique identifier of the document."},"data":{"type":"object","title":"Standardization Result","description":"The standardized result of the document. This is a structured JSON object."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema used for standardization."},"schemaName":{"type":"string","title":"Schema Name","description":"Name of the schema used for standardization."},"description":{"type":"string","title":"Description","description":"Description of the schema/standardization."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job that created the standardization."},"dataset":{"type":"string","title":"Dataset","description":"Name of the dataset to which the document belongs"},"filename":{"type":"string","title":"Filename","description":"Name of the file that was standardized."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the standardization job."},"metadata":{"type":"object","title":"Metadata","description":"Metadata associated with the document that originated this standardization. This just echoes any metadata you have previously posted on document creation."}},"type":"object","required":["standardizationId","documentId","data"],"title":"Standardization","description":"Public facing version of DocuPandaStandardization\n    "},"StandardizationMode":{"type":"string","enum":["default","sectionBased","spatial"],"title":"StandardizationMode"},"StandardizationReviewRequest":{"properties":{"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization ID","description":"Unique identifier of the standardization object."},"reviewInstructions":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Review Instructions","description":"Instructions for the review process. You may optionally specify which fields you want to localize, and give the AI tips to improve review performance"}},"type":"object","required":["standardizationIds"],"title":"StandardizationReviewRequest","description":"Request to standardize a document\n    "},"StandardizationSummary":{"properties":{"totalStandardizations":{"type":"integer","title":"Total Standardizations","description":"Total number of standardizations."},"schemaNames":{"items":{"type":"string"},"type":"array","title":"Schema Names","description":"List of schema names."}},"type":"object","required":["totalStandardizations","schemaNames"],"title":"StandardizationSummary"},"StandardizeBatchRequest":{"properties":{"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema to be used for standardization."},"documentIds":{"items":{"type":"string"},"type":"array","title":"Document IDs","description":"List of document IDs to be standardized, up to 100 per batch."},"forceRecompute":{"type":"boolean","title":"Force Restandardize","description":"Whether to recompute standardizations for documents that have already been standardized."},"guidelines":{"type":"string","title":"Guidelines","description":"Guidelines to apply to the schema when standardizing. If this is provided, it will override the schema guidelines."},"standardizationMode":{"allOf":[{"$ref":"#/components/schemas/StandardizationMode"}],"title":"Standardization Mode","description":"*Advanced Feature*\nChoose the standardization mode. For most use-case, the default mode is recommended. If you are getting inadequate results, it can be a good idea to try the other modes."}},"type":"object","required":["schemaId","documentIds"],"title":"StandardizeBatchRequest"},"StandardizeBatchResponse":{"properties":{"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the standardization job."},"status":{"allOf":[{"$ref":"#/components/schemas/ProcessingStatus"}],"title":"Processing Status","description":"Current status of the standardization job."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp of last update","description":"Timestamp of the last update to the job."},"documentCount":{"type":"integer","title":"Document Count","description":"Number of documents this job will effect. Documents already standardized from previous runs will not be counted."},"pageCount":{"type":"integer","title":"Page Count","description":"Number of pages this job will effect. Pages already standardized from previous runs will not be counted."},"standardizationJobIds":{"items":{"type":"string"},"type":"array","title":"Standardization Job IDs","description":"List of individual standardization job IDs that were run in this batch job."},"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"List of individual standardization IDs that were created in this batch job."},"details":{"type":"string","title":"Details","description":"Details of the status of the job."}},"type":"object","required":["jobId","status","timestamp","documentCount","pageCount"],"title":"StandardizeBatchResponse"},"StandardizeStep":{"properties":{"schemaIds":{"items":{"type":"string"},"type":"array","title":"Schemaids","description":"The IDs of all the schemas to standardize the document into."}},"type":"object","required":["schemaIds"],"title":"StandardizeStep"},"StandardizeStepOutput":{"properties":{"standardizationIds":{"items":{"type":"string"},"type":"array","title":"Standardization IDs","description":"List of standardization IDs that result from the standardize step."},"standardizationJobIds":{"items":{"type":"string"},"type":"array","title":"Job IDs","description":"List of job IDs for the standardization jobs that will run."}},"type":"object","required":["standardizationIds","standardizationJobIds"],"title":"StandardizeStepOutput"},"UpcomingInvoice":{"properties":{"currency":{"type":"string","title":"Currency","description":"The currency of the upcoming invoice. Currently this is always USD","default":"USD"},"amountRemaining":{"type":"string","title":"Amountremaining","description":"The amount remaining to be charged on the upcoming invoice"},"amountPaid":{"type":"string","title":"Amountpaid","description":"The amount that has already been paid on the upcoming invoice"},"total":{"type":"string","title":"Total","description":"The total amount that will be charged on the upcoming invoice"},"endDate":{"type":"string","format":"date-time","title":"Enddate","description":"The date on which the upcoming invoice will be charged"},"startDate":{"type":"string","format":"date-time","title":"Startdate","description":"The start date of the billing cycle for the upcoming invoice"}},"type":"object","required":["amountRemaining","amountPaid","total","endDate","startDate"],"title":"UpcomingInvoice"},"UpdateSchemaRequest":{"properties":{"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the schema which we are updating."},"schemaName":{"type":"string","title":"Schema Name","description":"Name of the new schema."},"jsonSchema":{"type":"object","title":"JSON Schema","description":"The new JSON schema to update. Must be a valid JSON schema (https://json-schema.org/). If not provided, the existing JSON schema will be used."}},"type":"object","required":["schemaId","schemaName"],"title":"UpdateSchemaRequest"},"UpdateSchemaResponse":{"properties":{"success":{"type":"boolean","title":"Success","description":"Whether the schema was successfully updated."},"schemaId":{"type":"string","title":"Schema ID","description":"Unique identifier of the newly updated schema."},"jobId":{"type":"string","title":"Job ID","description":"Unique identifier of the job that updated the schema."},"timestamp":{"type":"string","title":"Timestamp","description":"Timestamp of the new schema."}},"type":"object","required":["success","schemaId","jobId","timestamp"],"title":"UpdateSchemaResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"WebhookPortalResponse":{"properties":{"url":{"type":"string","title":"Url","description":"Generates a magic link for you to log on to URL to the app portal. From the portal you can configure webhook subscriptions"}},"type":"object","required":["url"],"title":"WebhookPortalResponse"},"Workflow":{"properties":{"workflowId":{"type":"string","title":"Workflow ID","description":"Unique identifier of the workflow."},"workflowContents":{"type":"object","title":"Workflow Contents","description":"The details of the workflow. Currently this will always be a dictionary with key being 'step' and value being  ClassifyStandardizeStep details or StandardizeStep details"},"workflowTrigger":{"type":"object","title":"Workflow Trigger","description":"The trigger that activates the workflow."},"workflowName":{"type":"string","title":"Workflow Name"}},"type":"object","required":["workflowId","workflowContents","workflowTrigger"],"title":"Workflow"},"WorkflowOnSubmitDocumentRequest":{"properties":{"standardizeStep":{"allOf":[{"$ref":"#/components/schemas/StandardizeStep"}],"title":"Standardize Step","description":"This step will always standardize the submitted document through one or more schemas you specify."},"classifyStandardizeStep":{"allOf":[{"$ref":"#/components/schemas/ClassifyStandardizeStep"}],"title":"Classify and Standardize Step","description":"This step allows you to decide on a list of class IDs to classify into, and define which schemas to standardize by, conditional on the classification result. You may choose to only standardize some of the classes, or standardize the same class by multiple schemas."},"workflowName":{"type":"string","title":"Workflowname","description":"Optionally name your workflow"}},"type":"object","title":"WorkflowOnSubmitDocumentRequest"},"WorkflowPostResponse":{"properties":{"workflowId":{"type":"string","title":"Workflowid","description":"The id of the workflow that was created. Call POST `/document` with this workflowId to run it"},"success":{"type":"boolean","title":"Success","description":"Whether the workflow was successfully created"}},"type":"object","required":["workflowId","success"],"title":"WorkflowPostResponse"},"WorkflowResponse":{"properties":{"workflowId":{"type":"string","title":"Workflow ID","description":"Unique identifier of the workflow."},"standardizeStep":{"allOf":[{"$ref":"#/components/schemas/StandardizeStepOutput"}],"title":"Standardize Step Output","description":"Output of the standardize step, if applicable."},"classifyStandardizeStep":{"allOf":[{"$ref":"#/components/schemas/ClassifyStandardizeStepOutput"}],"title":"Classify and Standardize Step Output","description":"Output of the classify and standardize step, if applicable."},"errorMessage":{"type":"string","title":"Error Message","description":"Error message if the workflow failed."}},"type":"object","required":["workflowId"],"title":"WorkflowResponse"}},"securitySchemes":{"APIKeyHeader":{"type":"apiKey","in":"header","name":"X-API-Key"}}},"servers":[{"url":"https://app.docupanda.io"}]}